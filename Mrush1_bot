import logging
import re
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

TOKEN = '7811217897:AAEkSqI8YrQ5OHtY6eA5Axgxoxuk0CdciiY'
GROUP_CHAT_ID = '644710593'
CHANNEL_ID = '@shop_mrush1'

START_HOUR = 8
END_HOUR = 23

FORBIDDEN_WORDS = {'—Å—É–∫–∞', '–±–ª—è—Ç—å', '–ø–∏–∑–¥–µ—Ü', '—Ö—É–π', '–µ–±–∞—Ç—å'}

ALLOWED_IMAGE_EXTENSIONS = {'.jpg', '.jpeg', '.png', '.gif'}

user_posts = {}

MAIN_MENU = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("üÜò –ü–æ–º–æ—â—å")],
        [KeyboardButton("üë®‚Äçüíª –ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")],
        [KeyboardButton("üì§ –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ")]
    ],
    resize_keyboard=True
)

BACK_BUTTON = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]],
    resize_keyboard=True
)

def is_within_working_hours() -> bool:
    now = datetime.now().hour
    return START_HOUR <= now < END_HOUR

async def check_subscription_and_block(context: ContextTypes, user_id: int) -> tuple[bool, str]:
    try:
        member = await context.bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)
        if member.status == 'kicked':
            return False, "‚ùå –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –∫–∞–Ω–∞–ª–µ –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞."
        return member.status in ['member', 'administrator', 'creator'], ""
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return False, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

def check_post_limit_and_duplicates(user_id: int, text: str) -> tuple[bool, str]:
    now = datetime.now()
    if user_id not in user_posts:
        user_posts[user_id] = {"posts": [], "count": 0, "date": now}
        return True, ""

    user_data = user_posts[user_id]
    if now.date() != user_data["date"].date():
        user_posts[user_id] = {"posts": [], "count": 0, "date": now}

    if user_data["count"] >= 3:
        return False, "‚ùå –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –≤ 3 –ø–æ—Å—Ç–∞ –∑–∞ —Å—É—Ç–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞."

    for post, post_time in user_data["posts"]:
        if post.strip() == text.strip():
            time_diff = now - post_time
            if time_diff < timedelta(days=1):
                hours_left = 24 - time_diff.total_seconds() // 3600
                return False, f"‚ùå –≠—Ç–æ—Ç –ø–æ—Å—Ç —É–∂–µ –ø—É–±–ª–∏–∫–æ–≤–∞–ª—Å—è. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ {int(hours_left)} —á."

    return True, ""

def add_successful_post(user_id: int, text: str):
    now = datetime.now()
    user_data = user_posts[user_id]
    user_data["posts"].append([text, now])
    user_data["count"] += 1
    user_data["date"] = now

def check_message(text: str, user_username: str) -> tuple[bool, str]:
    text_lower = text.lower()
    user_username = user_username.lower() if user_username else ""

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
    usernames = re.findall(r'@([a-zA-Z0-9_]{5,})', text)
    if not usernames:
        return False, "‚ùå –í —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (@username)."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    actions = ['–ø—Ä–æ–¥–∞–º', '–æ–±–º–µ–Ω', '–∫—É–ø–ª—é', '–ø—Ä–æ–¥–∞—é', '–æ–±–º–µ–Ω—è—é', '–ø–æ–∫—É–ø–∫–∞', '–ø—Ä–æ–¥–∞–∂–∞']
    if not any(action in text_lower for action in actions):
        return False, "‚ùå –£–∫–∞–∂–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: '–ø—Ä–æ–¥–∞–º', '–æ–±–º–µ–Ω' –∏–ª–∏ '–∫—É–ø–ª—é'."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—á—Ç–µ
    mail_keywords = ['–ø–æ—á—Ç–∞', '–ø–æ—á—Ç—É', '—É–∫–∞–∑', '—É—Ç–µ—Ä', '—É—Ç–µ—Ä—å', '—É—Ç–µ—Ä—è', '–æ–∫–∏', '–æ–∫ —Ä—É', '–æ–∫.—Ä—É', '–æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏', '—Å–ø–∞–∫–µ—Å', '–æ–¥–Ω–æ–∫–ª–∞—Å–Ω–∏–∫–∏', '–æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞', '–æ–¥–Ω–æ–∫–ª–∞—Å–Ω–∏–∫–∞', '–æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–æ–≤', '–æ–¥–Ω–æ–∫–ª–∞—Å–Ω–∏–∫–æ–≤']
    if not any(keyword in text_lower for keyword in mail_keywords):
        return False, "‚ùå –£–∫–∞–∂–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–≤—è–∑–∫–∞—Ö."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–∞–ø—Å
    if sum(c.isupper() for c in text) / len(text) > 0.7 and len(text) > 10:
        return False, "‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ (–∫–∞–ø—Å)."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∞—Ç
    if any(word in text_lower for word in FORBIDDEN_WORDS):
        return False, "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω –º–∞—Ç. –£–±–µ—Ä–∏—Ç–µ –µ–≥–æ."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–æ–∫
    if re.search(r'(https?://|www\.|\.com|\.ru|\.org|t\.me/[a-zA-Z0-9_]+)', text) and not re.search(
            r't\.me/shop_mrush1', text):
        return False, "‚ùå –°—Å—ã–ª–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã (–∫—Ä–æ–º–µ t.me/shop_mrush1)."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –±–æ—Ç–æ–≤
    if re.search(r'@[a-zA-Z0-9_]*bot\b', text_lower):
        return False, "‚ùå –£–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–æ–≤ –∑–∞–ø—Ä–µ—â–µ–Ω—ã."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —é–∑–µ—Ä–Ω–µ–π–º–æ–≤
    for username in usernames:
        username_lower = username.lower()
        if username_lower.endswith("bot"):
            continue
        if username_lower not in [user_username, 'vardges_grigoryan']:
            return False, f"‚ùå –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ @{username} –∑–∞–ø—Ä–µ—â–µ–Ω–æ. –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç (@–≤–∞—à_–Ω–∏–∫)."

    return True, "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º."

def check_file_extension(file_name: str) -> bool:
    if not file_name:
        return False
    return any(file_name.lower().endswith(ext) for ext in ALLOWED_IMAGE_EXTENSIONS)

async def start(update: Update, context: ContextTypes):
    if not is_within_working_hours():
        await update.message.reply_text("‚è∞ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 8:00 –¥–æ 23:00. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ–∑–∂–µ.")
        return

    await send_welcome_message(context, update.effective_chat.id)

async def send_welcome_message(context: ContextTypes, chat_id: int):
    greeting = (
        "ü§ñ *–ü—Ä–∏–≤–µ—Ç, —è Mrush1* ‚Äî –±–æ—Ç –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –æ *–ø–æ–∫—É–ø–∫–µ, –ø—Ä–æ–¥–∞–∂–µ –∏ –æ–±–º–µ–Ω–µ –∏–≥—Ä–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤*!\n\n"
        "üìå –û–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏:\n"
        "üîó [–ü—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã](https://t.me/shop_mrush1/11)\n"
        "üîó [–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É](https://t.me/shop_mrush1/13)\n\n"
        "üì∏ *–í–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ—Å—Ç–∞:*"
    )

    await context.bot.send_message(
        chat_id=chat_id,
        text=greeting,
        parse_mode="Markdown",
        disable_web_page_preview=True,
        reply_markup=MAIN_MENU
    )

    try:
        with open(r"C:\Users\vardg\OneDrive\–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª\Python\primerbot.jpg", "rb") as photo:
            await context.bot.send_photo(
                chat_id=chat_id,
                photo=photo,
                caption=(
                    "–ü—Ä–æ–¥–∞–º –∑–∞ 100‚ÇΩ –∏–ª–∏ –æ–±–º–µ–Ω—è—é –Ω–∞ –∞–∫–∫ –ø–æ—Å–∏–ª—å–Ω–µ–µ —Å –º–æ–µ–π –¥–æ–ø–ª–∞—Ç–æ–π\n"
                    "–ù–∞ –∞–∫–∫–∞—É–Ω—Ç–µ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –ø–æ—á—Ç—É\n\n"
                    "–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏: @vardges_grigoryan"
                )
            )
    except FileNotFoundError:
        await context.bot.send_message(chat_id=chat_id, text="‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–∏–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")

async def contact_admin(update: Update, context: ContextTypes):
    if not is_within_working_hours():
        await update.message.reply_text("‚è∞ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 8:00 –¥–æ 23:00. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ–∑–∂–µ.")
        return

    await update.message.reply_text(
        "üë®‚Äçüíª –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: @vardges_grigoryan",
        reply_markup=BACK_BUTTON
    )

async def show_help(update: Update, context: ContextTypes):
    if not is_within_working_hours():
        await update.message.reply_text("‚è∞ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 8:00 –¥–æ 23:00. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ–∑–∂–µ.")
        return

    help_text = (
        "üìå –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ? –ü—Ä–æ—Å—Ç–æ –≤—ã–ø–æ–ª–Ω–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö –ø—É–Ω–∫—Ç–æ–≤! ‚úÖ\n\n"
        "1. –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: @shop_mrush1\n"
        "2. –ù–∞–∂–º–∏ /start\n"
        "3. –û—Ç–ø—Ä–∞–≤—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±–æ—Ç—É (—Ç–µ–∫—Å—Ç –∏, –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏, —Ñ–æ—Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPG, JPEG, PNG –∏–ª–∏ GIF)\n\n"
        "‚ö† –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–æ—Å—Ç–∞–º:\n"
        "- –¶–µ–ª—å (–ø—Ä–æ–¥–∞–º/–∫—É–ø–ª—é/–æ–±–º–µ–Ω)\n"
        "- –¶–µ–Ω–∞ –∏–ª–∏ –±—é–¥–∂–µ—Ç (–ü—Ä–æ–¥–∞—é –∑–∞ 1000‚ÇΩ/–ö—É–ø–ª—é –¥–æ 500‚ÇΩ/–ú–µ–Ω—è—é + –¥–æ–ø–ª–∞—Ç–∞ 300‚ÇΩ)\n"
        "- –ü–æ—á—Ç–∞ (–µ—Å—Ç—å/—É—Ç–µ—Ä—è–Ω–∞/–º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ—é)\n"
        "- –§–æ—Ç–æ (–ø–æ –∂–µ–ª–∞–Ω–∏—é, —Ç–æ–ª—å–∫–æ JPG, JPEG, PNG, GIF)\n"
        "- –ë–µ–∑ –º–∞—Ç–∞, –∫–∞–ø—Å–∞, —Å—Å—ã–ª–æ–∫ –∏ –±–æ—Ç–æ–≤\n"
        "- –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç –≤ Telegram (@–≤–∞—à_–Ω–∏–∫)\n\n"
        "üí¨ –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ù–∞–∂–º–∏—Ç–µ ¬´üë®‚Äçüíª –ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É¬ª"
    )

    await update.message.reply_text(help_text, reply_markup=BACK_BUTTON)

async def handle_post(update: Update, context: ContextTypes):
    user_id = update.message.from_user.id
    text = update.message.text or update.message.caption or ""
    user_username = update.message.from_user.username

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    if not is_within_working_hours():
        await update.message.reply_text("‚è∞ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 8:00 –¥–æ 23:00. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ–∑–∂–µ.")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π
    subscription_ok, subscription_msg = await check_subscription_and_block(context, user_id)
    if not subscription_ok:
        await update.message.reply_text(
            f"{subscription_msg if subscription_msg else f'‚ùå –ß—Ç–æ–±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_ID}!'}\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription")]
            ])
        )
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
    limit_ok, limit_msg = check_post_limit_and_duplicates(user_id, text)
    if not limit_ok:
        await update.message.reply_text(limit_msg, reply_markup=MAIN_MENU)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    content_ok, content_msg = check_message(text, user_username)
    if not content_ok:
        await update.message.reply_text(content_msg, reply_markup=MAIN_MENU)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    photos = update.message.photo
    document = update.message.document
    if document and not check_file_extension(document.file_name):
        await update.message.reply_text(
            "‚ùå –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Ñ–∞–π–ª—ã. –†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (JPG, JPEG, PNG, GIF).",
            reply_markup=MAIN_MENU
        )
        return

    # –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    try:
        if photos:
            await context.bot.send_photo(
                chat_id=CHANNEL_ID,
                photo=photos[-1].file_id,
                caption=text
            )
        elif document:
            await context.bot.send_document(
                chat_id=CHANNEL_ID,
                document=document.file_id,
                caption=text
            )
        else:
            await context.bot.send_message(
                chat_id=CHANNEL_ID,
                text=text
            )

        add_successful_post(user_id, text)
        await update.message.reply_text(
            "‚úÖ –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!",
            reply_markup=MAIN_MENU
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=MAIN_MENU
        )

async def handle_message(update: Update, context: ContextTypes):
    text = update.message.text
    if text == "üë®‚Äçüíª –ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É":
        await contact_admin(update, context)
    elif text == "üÜò –ü–æ–º–æ—â—å":
        await show_help(update, context)
    elif text == "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        await update.message.reply_text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=MAIN_MENU)
    elif text == "üì§ –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ":
        await update.message.reply_text(
            "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏, –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –í–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.",
            reply_markup=BACK_BUTTON
        )
        context.user_data['awaiting_post'] = True
    elif context.user_data.get('awaiting_post', False):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Ñ–æ—Ç–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        await handle_post(update, context)
        context.user_data['awaiting_post'] = False
    else:
        await update.message.reply_text("üîÑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá", reply_markup=MAIN_MENU)

async def callback_query_handler(update: Update, context: ContextTypes):
    query = update.callback_query
    await query.answer()
    if query.data == "check_subscription":
        user_id = query.from_user.id
        subscription_ok, subscription_msg = await check_subscription_and_block(context, user_id)
        if subscription_ok:
            await query.edit_message_text("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!")
            await send_welcome_message(context, query.message.chat_id)
        else:
            await query.edit_message_text(
                f"‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª (@shop_mrush1). –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n{subscription_msg if subscription_msg else ''}",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription")]
                ])
            )

def main():
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(callback_query_handler))
    application.add_handler(MessageHandler(filters.TEXT | filters.PHOTO | filters.Document.IMAGE, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling()

if __name__ == '__main__':
    main()
